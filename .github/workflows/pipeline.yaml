name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  pull_request_review:
    types: [submitted]
  workflow_dispatch:

jobs:
  check-xml:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install XML linting tool
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils
    - name: List all XML files
      run: |
        find . -type f -name "*.xml"
    - name: Check XML syntax
      run: |
        set -e
        for file in $(find . -type f -name "*.xml"); do
          if xmllint --noout "$file" 2>/dev/null; then
            echo "XML syntax is valid for $file"
          else
            echo "XML syntax check failed for $file"
          fi
        done
    - name: Complete
      run: echo "All XML files have been checked."
      
  test-apex:
    runs-on: ubuntu-latest
    needs: check-xml
    steps:
      - uses: actions/checkout@v4
      - name: Install Salesforce CLI
        run: npm install --global @salesforce/cli

      - name: Create JWT Key File
        run: echo "${{ secrets.SF_JWT_KEY }}" > jwt_key.pem

      - name: Authenticate with Salesforce
        run: sfdx auth:jwt:grant --client-id ${{ secrets.SF_CLIENT_ID }} --jwt-key-file jwt_key.pem --username ${{ secrets.SF_USERNAME }} --instance-url https://login.salesforce.com -a SalesforceHay
      
      - name: Conect to scratch org
        run: sfdx force:config:set defaultusername=SalesforceHay

      - name: Run Apex tests
        run: sf apex run test -l RunLocalTests -c -r junit -w 90 -d test-results

      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

  deploy-production:
    runs-on: ubuntu-latest
    needs: test-apex
    if: success()
    steps:
    - uses: actions/checkout@v4  
    - name: Install Salesforce CLI
      run: npm install --global @salesforce/cli

    - name: Create JWT Key File
      run: echo "${{ secrets.SF_JWT_KEY }}" > jwt_key.pem
    
    - name: Authenticate with Salesforce
      run: sfdx auth:jwt:grant --client-id ${{ secrets.SF_CLIENT_ID }} --jwt-key-file jwt_key.pem --username ${{ secrets.SF_PROD_USERNAME }} --instance-url https://login.salesforce.com -a SalesforceHay
    
    - name: Deploy to production
      run: sf project deploy start
    
    - name: Run post-deployment tests
      run: sf apex run test -l RunLocalTests -c -r junit -w 90 -d test-results-production
    
    - name: Archive production test results
      uses: actions/upload-artifact@v3
      with:
        name: production-test-results
        path: test-results-production